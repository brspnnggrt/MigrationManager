//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace Webservice.Webs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebsSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Webs : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WebUrlFromPageUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSubWebCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebCollectionOperationCompleted;
        
        /// <remarks/>
        public Webs() {
            this.Url = "http://sps.svg.local/_vti_bin/webs.asmx";
        }
        
        /// <remarks/>
        public event WebUrlFromPageUrlCompletedEventHandler WebUrlFromPageUrlCompleted;
        
        /// <remarks/>
        public event GetAllSubWebCollectionCompletedEventHandler GetAllSubWebCollectionCompleted;
        
        /// <remarks/>
        public event GetListTemplatesCompletedEventHandler GetListTemplatesCompleted;
        
        /// <remarks/>
        public event GetWebCompletedEventHandler GetWebCompleted;
        
        /// <remarks/>
        public event GetWebCollectionCompletedEventHandler GetWebCollectionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/WebUrlFromPageUrl", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WebUrlFromPageUrl(string pageUrl) {
            object[] results = this.Invoke("WebUrlFromPageUrl", new object[] {
                        pageUrl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWebUrlFromPageUrl(string pageUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WebUrlFromPageUrl", new object[] {
                        pageUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndWebUrlFromPageUrl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WebUrlFromPageUrlAsync(string pageUrl) {
            this.WebUrlFromPageUrlAsync(pageUrl, null);
        }
        
        /// <remarks/>
        public void WebUrlFromPageUrlAsync(string pageUrl, object userState) {
            if ((this.WebUrlFromPageUrlOperationCompleted == null)) {
                this.WebUrlFromPageUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebUrlFromPageUrlOperationCompleted);
            }
            this.InvokeAsync("WebUrlFromPageUrl", new object[] {
                        pageUrl}, this.WebUrlFromPageUrlOperationCompleted, userState);
        }
        
        private void OnWebUrlFromPageUrlOperationCompleted(object arg) {
            if ((this.WebUrlFromPageUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebUrlFromPageUrlCompleted(this, new WebUrlFromPageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetAllSubWebCollection", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAllSubWebCollection() {
            object[] results = this.Invoke("GetAllSubWebCollection", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllSubWebCollection(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllSubWebCollection", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetAllSubWebCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSubWebCollectionAsync() {
            this.GetAllSubWebCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSubWebCollectionAsync(object userState) {
            if ((this.GetAllSubWebCollectionOperationCompleted == null)) {
                this.GetAllSubWebCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSubWebCollectionOperationCompleted);
            }
            this.InvokeAsync("GetAllSubWebCollection", new object[0], this.GetAllSubWebCollectionOperationCompleted, userState);
        }
        
        private void OnGetAllSubWebCollectionOperationCompleted(object arg) {
            if ((this.GetAllSubWebCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSubWebCollectionCompleted(this, new GetAllSubWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListTemplates", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetListTemplates() {
            object[] results = this.Invoke("GetListTemplates", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetListTemplates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetListTemplates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetListTemplates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetListTemplatesAsync() {
            this.GetListTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void GetListTemplatesAsync(object userState) {
            if ((this.GetListTemplatesOperationCompleted == null)) {
                this.GetListTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetListTemplates", new object[0], this.GetListTemplatesOperationCompleted, userState);
        }
        
        private void OnGetListTemplatesOperationCompleted(object arg) {
            if ((this.GetListTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListTemplatesCompleted(this, new GetListTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWeb(string webUrl) {
            object[] results = this.Invoke("GetWeb", new object[] {
                        webUrl});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWeb(string webUrl, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWeb", new object[] {
                        webUrl}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetWeb(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebAsync(string webUrl) {
            this.GetWebAsync(webUrl, null);
        }
        
        /// <remarks/>
        public void GetWebAsync(string webUrl, object userState) {
            if ((this.GetWebOperationCompleted == null)) {
                this.GetWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebOperationCompleted);
            }
            this.InvokeAsync("GetWeb", new object[] {
                        webUrl}, this.GetWebOperationCompleted, userState);
        }
        
        private void OnGetWebOperationCompleted(object arg) {
            if ((this.GetWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebCompleted(this, new GetWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWebCollection", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWebCollection() {
            object[] results = this.Invoke("GetWebCollection", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebCollection(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebCollection", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetWebCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebCollectionAsync() {
            this.GetWebCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetWebCollectionAsync(object userState) {
            if ((this.GetWebCollectionOperationCompleted == null)) {
                this.GetWebCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebCollectionOperationCompleted);
            }
            this.InvokeAsync("GetWebCollection", new object[0], this.GetWebCollectionOperationCompleted, userState);
        }
        
        private void OnGetWebCollectionOperationCompleted(object arg) {
            if ((this.GetWebCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebCollectionCompleted(this, new GetWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void WebUrlFromPageUrlCompletedEventHandler(object sender, WebUrlFromPageUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebUrlFromPageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebUrlFromPageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetAllSubWebCollectionCompletedEventHandler(object sender, GetAllSubWebCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSubWebCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSubWebCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetListTemplatesCompletedEventHandler(object sender, GetListTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetWebCompletedEventHandler(object sender, GetWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetWebCollectionCompletedEventHandler(object sender, GetWebCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}
